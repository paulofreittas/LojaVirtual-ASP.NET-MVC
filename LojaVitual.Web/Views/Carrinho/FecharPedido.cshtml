@model LojaVirtual.Dominio.Entidades.Pedido

<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/jquery.bootstrapvalidator/0.5.3/css/bootstrapValidator.min.css" />
<script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/jquery.bootstrapvalidator/0.5.3/js/bootstrapValidator.min.js"> </script>

@{
    ViewBag.Title = "Fechar o Pedido";
}

<h2>Fechar o Pedido:</h2>

<p>Digite suas informações abaixo</p>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "form" , @class="form-horizontal" }))
{
    @Html.ValidationSummary()

    <h3>Enviar para</h3>

    <div class="form-group" id="nomeCliente">
        <label for="inputNome" class="col-md-3 control-label">Nome: </label>
        <div class="col-md-3">
            @Html.TextBoxFor(x => x.NomeCliente, new { @class = "form-control", id = "inputNome" })
            @Html.ValidationMessageFor(x => x.NomeCliente)
        </div>
    </div>

    <h3>Dados para Entrega:</h3>

    foreach (var property in ViewData.ModelMetadata.Properties)
    {
        if (property.PropertyName != "NomeCliente" && property.PropertyName != "EmbrulharPresente")
        {
            <div class="form-group">
                <label>@(property.DisplayName ?? property.PropertyName)</label>
                @Html.TextBox(property.PropertyName, null, new { @class = "form-control" })
            </div>
        }

    }

    <h3>Opções:</h3>
    <div class="checkbox">
        <label>
            @Html.EditorFor(x => x.EmbrulharPresente)
            Embrulhar para Presente?
        </label>
    </div>

    <input class="btn btn-primary" type="submit" value="Fechar o Pedido" />

}

<script>
    $('#Cep')
        .change(function (e) {

            e.preventDefault();

            $('#Endereco').val('');
            $('#Cidade').val('');
            $('#Bairro').val('');
            $('#Estado').val('');

            var cep = $('#Cep').val().replace("-", "").replace(".", "");

            $.getJSON("http://cep.republicavirtual.com.br/web_cep.php?cep=" + cep + "&formato=json", {}, function (data) {
                if (data.resultado_txt = 'sucesso - cep completo') {
                    $('#Endereco').val(data.tipo_logradouro + ' ' + data.logradouro);
                    $('#Cidade').val(data.cidade);
                    $('#Bairro').val(data.bairro);
                    $('#Estado').val(data.uf);
                }
            });
        });
</script>

<script>
    $(document).ready(function () {
        $('#form').bootstrapValidator({
            container: '#messages',
            feedbackIcons: {
                valid: 'glyphicon glyphicon-ok',
                invalid: 'glyphicon glyphicon-remove',
                validating: 'glyphicon glyphicon-refresh'
            },
            fields: {
                NomeCliente: {
                    validators: {
                        notEmpty: {
                            message: 'The full name is required and cannot be empty'
                        }
                    }
                },
                email: {
                    validators: {
                        notEmpty: {
                            message: 'The email address is required and cannot be empty'
                        },
                        emailAddress: {
                            message: 'The email address is not valid'
                        }
                    }
                },
                title: {
                    validators: {
                        notEmpty: {
                            message: 'The title is required and cannot be empty'
                        },
                        stringLength: {
                            max: 100,
                            message: 'The title must be less than 100 characters long'
                        }
                    }
                },
                content: {
                    validators: {
                        notEmpty: {
                            message: 'The content is required and cannot be empty'
                        },
                        stringLength: {
                            max: 500,
                            message: 'The content must be less than 500 characters long'
                        }
                    }
                }
            }
        });
    });
</script>





